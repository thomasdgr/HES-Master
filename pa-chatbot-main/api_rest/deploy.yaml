# DEPLOY
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${CI_PROJECT_NAME}
  namespace: ${KUBERNETES_NAMESPACE}
  labels:
    app: ${CI_PROJECT_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${CI_PROJECT_NAME}
  template:
    metadata:
      labels:
        app: ${CI_PROJECT_NAME}
    spec:
      imagePullSecrets:
        - name: pa-secret
      containers:
        - name: ${CI_PROJECT_NAME}
          image: ${IMAGE}
          imagePullPolicy: Always
          env:
            - name: URL_PREFIX
              value: ${URL_PREFIX}
            - name: OPENAI_API_KEY
              value: ${OPENAI_API_KEY}
          ports:
            - containerPort: 8000

# INGRESS
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/keep-alive: '3600'
    nginx.ingress.kubernetes.io/upstream-keepalive-timeout: '3600'
    nginx.ingress.kubernetes.io/client-header-timeout: '3600'
    nginx.ingress.kubernetes.io/client-body-timeout: '3600'
  name: ${CI_PROJECT_NAME}-ingress
  namespace: ${KUBERNETES_NAMESPACE}
spec:
  rules:
  - host: chatbot.kube.isc.heia-fr.ch
    http:
      paths:
      - backend:
          service:
            name: ${CI_PROJECT_NAME}
            port:
              number: 8000
        path: /
        pathType: Prefix

# SERVICE
---
apiVersion: v1
kind: Service
metadata:
  name: ${CI_PROJECT_NAME}
  namespace: ${KUBERNETES_NAMESPACE}
spec:
  selector:
    app: ${CI_PROJECT_NAME}
  ports:
  - protocol: TCP
    port: 8000